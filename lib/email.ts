import sgMail from '@sendgrid/mail';
import { readEnv } from './env';

// Initialize SendGrid only when needed
function initializeSendGrid() {
  const sendGridApiKey = readEnv('SENDGRID_API_KEY');
  if (!sendGridApiKey) {
    throw new Error('SENDGRID_API_KEY environment variable is required for email functionality');
  }
  sgMail.setApiKey(sendGridApiKey);
  return true;
}

export interface EmailChatRequest {
  to: string;
  subject?: string;
  conversationId: string;
  messageContent: string;
  userEmail?: string;
}

export interface EmailChatResponse {
  success: boolean;
  messageId?: string;
  error?: string;
}

export async function sendChatEmail({
  to,
  subject = "AI Chat Response from MTA Data Assistant",
  conversationId,
  messageContent,
  userEmail
}: EmailChatRequest): Promise<EmailChatResponse> {
  try {
    // Initialize SendGrid only when this function is called
    initializeSendGrid();
    const fromEmail = 'noreply@mta-data.com'; // Your verified sender email
    
    const htmlContent = `
      <!DOCTYPE html>
      <html>
        <head>
          <meta charset="utf-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>AI Chat Response</title>
          <style>
            body {
              font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
              line-height: 1.6;
              color: #333;
              max-width: 600px;
              margin: 0 auto;
              padding: 20px;
              background-color: #f8f9fa;
            }
            .container {
              background: white;
              border-radius: 8px;
              padding: 30px;
              box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            }
            .header {
              border-bottom: 2px solid #e9ecef;
              padding-bottom: 20px;
              margin-bottom: 30px;
            }
            .logo {
              font-size: 24px;
              font-weight: bold;
              color: #007bff;
              margin-bottom: 10px;
            }
            .content {
              white-space: pre-wrap;
              background: #f8f9fa;
              padding: 20px;
              border-radius: 6px;
              border-left: 4px solid #007bff;
              margin: 20px 0;
            }
            .footer {
              margin-top: 30px;
              padding-top: 20px;
              border-top: 1px solid #e9ecef;
              font-size: 14px;
              color: #6c757d;
            }
            .conversation-link {
              display: inline-block;
              background: #007bff;
              color: white;
              padding: 10px 20px;
              text-decoration: none;
              border-radius: 5px;
              margin-top: 15px;
            }
            .conversation-link:hover {
              background: #0056b3;
            }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="header">
              <div class="logo">MTA Data Assistant</div>
              <h1>${subject}</h1>
            </div>
            
            <div class="content">
${messageContent}
            </div>
            
            <div class="footer">
              <p>This response was generated by the MTA Data Assistant AI.</p>
              ${conversationId ? `
                <p>Conversation ID: ${conversationId}</p>
                <a href="https://mta-data.com/chat?conversation=${conversationId}" class="conversation-link">
                  Continue this conversation
                </a>
              ` : ''}
              ${userEmail ? `<p>Requested by: ${userEmail}</p>` : ''}
              <p><small>© 2024 MTA Data Assistant. This is an automated message.</small></p>
            </div>
          </div>
        </body>
      </html>
    `;

    const textContent = `
${subject}

${messageContent}

---
This response was generated by the MTA Data Assistant AI.
${conversationId ? `Conversation ID: ${conversationId}` : ''}
${userEmail ? `Requested by: ${userEmail}` : ''}

© 2024 MTA Data Assistant. This is an automated message.
    `;

    const msg = {
      to,
      from: fromEmail,
      subject,
      text: textContent,
      html: htmlContent,
      replyTo: userEmail || fromEmail,
    };

    const response = await sgMail.send(msg);
    
    return {
      success: true,
      messageId: response[0].headers['x-message-id'] as string,
    };
  } catch (error: any) {
    console.error('SendGrid error:', error);
    return {
      success: false,
      error: error.message || 'Failed to send email',
    };
  }
}
